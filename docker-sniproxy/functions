# common functions

function is_ipv4() {
    echo ${1} | grep -Po '^[0-9]{1,3}+\.[0-9]{1,3}+\.[0-9]{1,3}+\.[0-9]{1,3}$' > /dev/null
    local rc=$?
    return ${rc}
}


function is_ipv6() {
    echo ${1} | grep -Po '^[a-zA-Z0-9]{1,4}:[a-zA-Z0-9]{1,4}:[a-zA-Z0-9]{1,4}:[a-zA-Z0-9]{1,4}::[a-zA-Z0-9]{1,4}$' > /dev/null
    local rc=$?
    return ${rc}
}


function get_iface() {
    local iface=$(ip -${1} route | grep default | awk '{print $5}')
    echo ${iface} | head -n 1 | awk '{print $1}'
}


function get_ipaddr() {
    local iface=$(get_iface 4)
    local ipaddr=$(ip addr show dev ${iface}\
      | grep inet\
      | grep -v inet6\
      | awk '{print $2}'\
      | grep -Po '[0-9]{1,3}+\.[0-9]{1,3}+\.[0-9]{1,3}+\.[0-9]{1,3}+(?=\/)')
    echo ${ipaddr} | head -n 1 | awk '{print $1}'
}


function get_ipaddr6() {
    local iface=$(get_iface 6)
    local ip6addr=$(ip -6 addr show dev ${iface}\
      | grep inet6\
      | grep -v link\
      | grep 'scope global'\
      | awk '{print $2}'\
      | grep -Po '[0-9a-fA-F:].+[^/.+]{4}')
    echo ${ip6addr} | head -n 1 | awk '{print $1}'
}


function get_ext_ipaddr() {
    local extip=$(with_backoff curl -${1}\
      --silent\
      --connect-timeout ${TIMEOUT}\
      --max-time $((${TIMEOUT}*2))\
      http://mgmt.unzoner.com)
    echo ${extip} | head -n 1 | awk '{print $1}'
}


function get_client_ipaddr() {
    echo ${SSH_CONNECTION} | head -n 1 | awk '{print $1}'
}


# Retries a command a with backoff.
#
# The retry count is given by ATTEMPTS (default 5), the
# initial backoff timeout is given by TIMEOUT in seconds
# (default 1.)
#
# Successive backoffs double the timeout.
#
# Beware of set -e killing your whole script!
function with_backoff {
  local max_attempts=${ATTEMPTS-5}
  local timeout=${TIMEOUT-1}
  local attempt=0
  local exitCode=0

  while [[ $attempt < $max_attempts ]]
  do
    "$@"
    exitCode=$?

    if [[ $exitCode == 0 ]]
    then
      break
    fi

    echo "Failure! Retrying in $timeout.." 1>&2
    sleep $timeout
    attempt=$(( attempt + 1 ))
    timeout=$(( timeout * 2 ))
  done

  if [[ $exitCode != 0 ]]
  then
    echo "You've failed me for the last time! ($@)" 1>&2
  fi

  return $exitCode
}
